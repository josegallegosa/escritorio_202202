<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="0">
        <!-- structure type -->
        <record id="structure_type_s_i_co" model="hr.payroll.structure.type">
            <field name="name">SALARIO INTEGRAL</field>
            <field name="country_id" ref="base.co"/>
            <field name="wage_type">monthly</field>
            <field name="default_struct_id" ref="structure_s_i_co"></field>
        </record>

        <!-- Salary Structure -->
        <record id="structure_s_i_co" model="hr.payroll.structure">
            <field name="name">SALARIO INTEGRAL</field>
            <field name="type_id" ref="structure_type_s_i_co"/>
            <field name="country_id" ref="base.co"/>
        </record>

        <!-- Input Type
        <record id="payslip_input_type_com" model="hr.payslip.input.type">
            <field name="name">COMISIONES</field>
            <field name="code">COM</field>
            <field name="country_id" ref="base.co"/>
        </record>
        -->
        
        <!-- Categories-->
        <record id="sli_category" model="hr.salary.rule.category">
            <field name="name">SLI</field>
            <field name="code">SLI</field>
        </record>
        
        <!-- Salary rules -->

        <record id="hr_salary_rule_sis_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">SIS</field>
            <field name="category_id" ref="sli_category"/>
            <field name="name">FACTOR SALARIAL</field>
            <field name="sequence" eval="1"/>
            <field name="amount_python_compute">result = worked_days.DIAT.number_of_days*contract.wage*0.7/30</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_sip_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">SIP</field>
            <field name="category_id" ref="sli_category"/>
            <field name="name">FACTOR PRESTACIONAL</field>
            <field name="sequence" eval="2"/>
            <field name="amount_python_compute">result = worked_days.DIAT.number_of_days*contract.wage*0.3/30</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>
             

         <record id="hr_salary_rule_inc_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">INC</field>
            <field name="category_id" ref="aus_category"/>
            <field name="name">INCAPACIDAD ENFERMEDAD GENERAL S.I. EMPRESA</field>
            <field name="sequence" eval="3"/>
            <field name="amount_python_compute">
base = employee.GetIBCSLastMonth(payslip.date_to,contract)

if worked_days.IGE.number_of_days > 2:
    result = base/30*2
else:
    result = base/30*worked_days.IGE.number_of_days</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_ige_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">IGE</field>
            <field name="category_id" ref="aus_category"/>
            <field name="name">INCAPACIDAD ENFERMEDAD GENERAL S.I. POR COBRAR A EPS</field>
            <field name="sequence" eval="4"/>
            <field name="amount_python_compute">
if worked_days.IGE.number_of_days > 2:
    if employee.GetIBCSLastMonth(payslip.date_to,contract)*(2/3)/30*(worked_days.IGE.number_of_days-2) &lt; parameter_obj.get_amount('SMMLV',payslip.date_from)/30:                 
        result = (parameter_obj.get_amount('SMMLV',payslip.date_from)/30)*(2/3)*(worked_days.IGE.number_of_days-2)
    else:
        result = employee.GetIBCSLastMonth(payslip.date_to,contract)*(2/3)/30*(worked_days.IGE.number_of_days-2)
else:
    result = 0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>


         <record id="hr_salary_rule_irl_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">IRL</field>
            <field name="category_id" ref="aus_category"/>
            <field name="name">INCAPACIDAD ACCIDENTE LABORAL S.I.</field>
            <field name="sequence" eval="5"/>
            <field name="amount_python_compute">result = employee.GetIBCSLastMonth(payslip.date_to,contract)/30*worked_days.IRL.number_of_days</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_lma_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">LMA</field>
            <field name="category_id" ref="aus_category"/>
            <field name="name">LICENCIA DE MATERNIDAD S.I.</field>
            <field name="sequence" eval="6"/>
            <field name="amount_python_compute">result = contract.wage/30*worked_days.LMA.number_of_days</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_lpa_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">LPA</field>
            <field name="category_id" ref="aus_category"/>
            <field name="name">LICENCIA DE PATERNIDAD S.I.</field>
            <field name="sequence" eval="7"/>
            <field name="amount_python_compute">result = contract.wage/30*worked_days.LPA.number_of_days</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_anr_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">LNR</field>
            <field name="category_id" ref="aun_category"/>
            <field name="name">LICENCIA NO REMUNERADA</field>
            <field name="sequence" eval="8"/>
            <field name="amount_python_compute">result = 0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_sln_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">SLN</field>
            <field name="category_id" ref="aun_category"/>
            <field name="name">SANCION// SUSPENSIÃ“N</field>
            <field name="sequence" eval="9"/>
            <field name="amount_python_compute">result = 0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_lr_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">LR</field>
            <field name="category_id" ref="aus_category"/>
            <field name="name">LICENCIA REMUNERADA S.I.</field>
            <field name="sequence" eval="10"/>
            <field name="amount_python_compute">result = contract.wage/30*worked_days.LR.number_of_days</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_lt_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">LT</field>
            <field name="category_id" ref="aus_category"/>
            <field name="name">LICENCIA DE LUTO S.I.</field>
            <field name="sequence" eval="11"/>
            <field name="amount_python_compute">result = contract.wage/30*worked_days.LT.number_of_days</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         

         <record id="hr_salary_rule_com_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">COM</field>
            <field name="category_id" ref="ext_category"/>
            <field name="name">COMISIONES</field>
            <field name="sequence" eval="12"/>
            <field name="amount_python_compute">if inputs.COM:
    result=inputs.COM.amount
else:
    result=0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_bns_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">BNS</field>
            <field name="category_id" ref="ext_category"/>
            <field name="name">BONIFICACION SALARIAL</field>
            <field name="sequence" eval="13"/>
            <field name="amount_python_compute">if inputs.BNS:
    result=inputs.BNS.amount
else:
    result=0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_bno_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">BNO</field>
            <field name="category_id" ref="ins_category"/>
            <field name="name">BONIFICACION POR MERA LIBERALIDAD</field>
            <field name="sequence" eval="14"/>
            <field name="amount_python_compute">if inputs.BNO:
    result=inputs.BNO.amount
else:
    result=0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_bor_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">BOR</field>
            <field name="category_id" ref="ins_category"/>
            <field name="name">BONIFICACION POR RETIRO</field>
            <field name="sequence" eval="15"/>
            <field name="amount_python_compute">if inputs.BOR:
    result=inputs.BOR.amount
else:
    result=0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_aua_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">AUA</field>
            <field name="category_id" ref="ins_category"/>
            <field name="name">AUXILIO DE ALIMENTACION</field>
            <field name="sequence" eval="16"/>
            <field name="amount_python_compute">if inputs.AUA:
    result=inputs.AUA.amount
else:
    result=0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_atx_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">ATX</field>
            <field name="category_id" ref="ins_category"/>
            <field name="name">AUXILIO DE TRANSPORTE EXTRA LEGAL</field>
            <field name="sequence" eval="17"/>
            <field name="amount_python_compute">if inputs.ATX:
    result=inputs.ATX.amount
else:
    result=0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_aue_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">AUE</field>
            <field name="category_id" ref="ins_category"/>
            <field name="name">AUXILIO EDUCATIVO</field>
            <field name="sequence" eval="18"/>
            <field name="amount_python_compute">if inputs.AUE:
    result=inputs.AUE.amount
else:
    result=0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_aum_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">AUM</field>
            <field name="category_id" ref="ins_category"/>
            <field name="name">AUXILIO MOVILIZACION</field>
            <field name="sequence" eval="19"/>
            <field name="amount_python_compute">if inputs.AUM:
    result=inputs.AUM.amount
else:
    result=0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_auv_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">AUV</field>
            <field name="category_id" ref="ins_category"/>
            <field name="name">AUXILIO VIVIENDA</field>
            <field name="sequence" eval="20"/>
            <field name="amount_python_compute">if inputs.AUV:
    result=inputs.AUV.amount
else:
    result=0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         
<!--
         <record id="hr_salary_rule_inc_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">INC</field>
            <field name="category_id" ref="inc_category"/>
            <field name="name">INDEMNIZACION</field>
            <field name="sequence" eval="20"/>
            <field name="amount_python_compute">result =  SI ( Tipo de contrato es igual a "Termino indefinido" ; si ( sueldo contrato > SMMLV *10, </field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>
-->
         <record id="hr_salary_rule_rer_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">RER</field>
            <field name="category_id" ref="rer_category"/>
            <field name="name">REINTREGROS</field>
            <field name="sequence" eval="21"/>
            <field name="amount_python_compute">if inputs.RER:
    result=inputs.RER.amount
else:
    result=0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_res_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">RES</field>
            <field name="category_id" ref="ext_category"/>
            <field name="name">RETROACTIVO SALARIAL</field>
            <field name="sequence" eval="22"/>
            <field name="amount_python_compute">if inputs.RES:
    result=inputs.RES.amount
else:
    result=0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_vcc_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">VCC</field>
            <field name="category_id" ref="vac_category"/>
            <field name="name">VACACIONES COMPENSADAS</field>
            <field name="sequence" eval="23"/>
            <field name="amount_python_compute">result = (employee.GetBaseVacCompensadas(payslip.date_to,contract)+contract.wage)/30*worked_days.VCO.number_of_days</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_vcd_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">VCD</field>
            <field name="category_id" ref="vac_category"/>
            <field name="name">VACACIONES DISFRUTADAS</field>
            <field name="sequence" eval="24"/>
            <field name="amount_python_compute">result = (employee.GetBaseVacDisfrutadas(payslip.date_to,contract)+contract.wage)/30*worked_days.VDI.number_of_days</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_vcr_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">VCR</field>
            <field name="category_id" ref="vac_category"/>
            <field name="name">VACACIONES POR RETIRO</field>
            <field name="sequence" eval="25"/>
            <field name="amount_python_compute">result = (employee.GetBaseVacPorRetiro(payslip.date_to,contract)+contract.wage)/30*worked_days.VRE.number_of_days</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_dss_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">DSS</field>
            <field name="category_id" ref="dss_category"/>
            <field name="name">DEVENGOS SEG SOC</field>
            <field name="sequence" eval="26"/>
            <field name="amount_python_compute">result = categories.SUE + categories.SLI + categories.AUS + categories.HE + categories.RC + categories.EXT + categories.INS + categories.SUB</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_ibcs_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">IBCS</field>
            <field name="category_id" ref="bss_category"/>
            <field name="name">IBC SEG SOC</field>
            <field name="sequence" eval="27"/>
            <field name="amount_python_compute">XIBCS=0
if (categories.EXT + categories.SUB) > (categories.DSS*0.4): 
    XIBCS = categories.DSS*0.6
else: 
    XIBCS = (categories.SUE + categories.AUS + categories.HE + categories.RC + categories.EXT + SIS)

if XIBCS &lt; parameter_obj.get_amount('IBC MINIMO SEG SOC',payslip.date_from):
    result = parameter_obj.get_amount('IBC MINIMO SEG SOC',payslip.date_from)
elif XIBCS > parameter_obj.get_amount('IBC MAXIMO SEG SOC',payslip.date_from):
    result = parameter_obj.get_amount('IBC MAXIMO SEG SOC',payslip.date_from)
else:
    result = XIBCS</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_ibca_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">IBCA</field>
            <field name="category_id" ref="bss_category"/>
            <field name="name">IBC ARL</field>
            <field name="sequence" eval="28"/>
            <field name="amount_python_compute">if (categories.EXT + categories.SUB) >(categories.DSS*0.4): 
            result = categories.DSS*0.6
else: 
            result = (categories.SUE + categories.AUS + categories.HE + categories.RC + categories.EXT + SIS)</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_ibcp_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">IBCP</field>
            <field name="category_id" ref="bss_category"/>
            <field name="name">IBC PARAFISCALES</field>
            <field name="sequence" eval="29"/>
            <field name="amount_python_compute">result = (categories.SUE + categories.HE + categories.RC + categories.EXT + categories.VAC + SIS)</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_pen_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">PEN</field>
            <field name="category_id" ref="ass_category"/>
            <field name="name">PENSION</field>
            <field name="sequence" eval="30"/>
            <field name="amount_python_compute">result = IBCS*0.04</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_fsp_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">FSP</field>
            <field name="category_id" ref="ass_category"/>
            <field name="name">FONDO DE SOLIDARIDAD</field>
            <field name="sequence" eval="31"/>
            <field name="amount_python_compute">if IBCS > parameter_obj.get_amount('SMMLV',payslip.date_from)*4:
                result = IBCS*0.5/100
else:
                result = 0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_fst_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">FST</field>
            <field name="category_id" ref="ass_category"/>
            <field name="name">FONDO DE SUBSISTENCIA</field>
            <field name="sequence" eval="32"/>
            <field name="amount_python_compute">SMMLV = parameter_obj.get_amount('SMMLV',payslip.date_from)
if IBCS > SMMLV*4 and IBCS &lt; SMMLV*15.99:
    result = IBCS*0.5/100
elif IBCS > SMMLV*16 and IBCS &lt; SMMLV*16.99: 
    result = IBCS*0.7/100
elif IBCS > SMMLV*17 and IBCS &lt; SMMLV*17.99:
    result = IBCS*0.9/100
elif IBCS > SMMLV*18 and IBCS &lt; SMMLV*18.99:
    result = IBCS*1.1/100
elif IBCS > SMMLV*19 and IBCS &lt; SMMLV*19.99: 
    result = IBCS*1.3/100
elif IBCS > SMMLV*20: 
    result = IBCS*1.5/100
else:
    result = 0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_sal_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">SAL</field>
            <field name="category_id" ref="ass_category"/>
            <field name="name">SALUD</field>
            <field name="sequence" eval="33"/>
            <field name="amount_python_compute">result = IBCS*0.04</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>


         <record id="hr_salary_rule_afc_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">AFC</field>
            <field name="category_id" ref="rte_category"/>
            <field name="name">APORTES CUENTAS AFC</field>
            <field name="sequence" eval="34"/>
            <field name="amount_python_compute">if inputs.AFC:
    result=inputs.AFC.amount
else:
    result=0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_apv_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">APV</field>
            <field name="category_id" ref="rte_category"/>
            <field name="name">APORTES PENSIONE VOLUNTARIA</field>
            <field name="sequence" eval="35"/>
            <field name="amount_python_compute">if inputs.APV:
    result=inputs.APV.amount
else:
    result=0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_den_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">DEN</field>
            <field name="category_id" ref="des_category"/>
            <field name="name">DESCUENTO ANTICIPO</field>
            <field name="sequence" eval="36"/>
            <field name="amount_python_compute">if inputs.DEN:
    result=inputs.DEN.amount
else:
    result=0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_dec_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">DEC</field>
            <field name="category_id" ref="des_category"/>
            <field name="name">DESCUENTO CELULAR</field>
            <field name="sequence" eval="37"/>
            <field name="amount_python_compute">if inputs.DEC:
    result=inputs.DEC.amount
else:
    result=0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_foe_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">FOE</field>
            <field name="category_id" ref="des_category"/>
            <field name="name">FONDO DE EMPLEADOS</field>
            <field name="sequence" eval="38"/>
            <field name="amount_python_compute">if inputs.FOE:
    result=inputs.FOE.amount
else:
    result=0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_lil_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">LIL</field>
            <field name="category_id" ref="des_category"/>
            <field name="name">LIBRANZA</field>
            <field name="sequence" eval="39"/>
            <field name="amount_python_compute">if inputs.LIL:
    result=inputs.LIL.amount
else:
    result=0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_poe_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">POE</field>
            <field name="category_id" ref="des_category"/>
            <field name="name">POLIZA EXCEQUIAL</field>
            <field name="sequence" eval="40"/>
            <field name="amount_python_compute">if inputs.POE:
    result=inputs.POE.amount
else:
    result=0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_prd_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">PRP</field>
            <field name="category_id" ref="des_category"/>
            <field name="name">PRESTAMOS</field>
            <field name="sequence" eval="41"/>
            <field name="amount_python_compute">if inputs.PRP:
    result=inputs.PRP.amount
else:
    result=0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

<!-- DEPURACION CALCULO RETENCION EN LA FUENTE-->

         <record id="hr_salary_rule_ixr_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">IXR</field>
            <field name="category_id" ref="ixr_category"/>
            <field name="name">INGRESOS PARA RENTA</field>
            <field name="sequence" eval="42"/>
            <field name="amount_python_compute">result = categories.SUE + categories.SLI + categories.AUS + categories.HE + categories.RC + categories.EXT + categories.INS + categories.SUB + categories.VAC - categories.ASS </field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_bcm_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">BCM</field>
            <field name="category_id" ref="bcm_category"/>
            <field name="name">BENEFICIO CORRECCION MONETARIA</field>
            <field name="sequence" eval="43"/>
            <field name="amount_python_compute">if employee.monetary_correction_relief > 100*parameter_obj.get_amount('UVT',payslip.date_from):
            result = 100*parameter_obj.get_amount('UVT',payslip.date_from)
else:
            result = employee.monetary_correction_relief</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_bmp_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">BMP</field>
            <field name="category_id" ref="bmp_category"/>
            <field name="name">BENEFICIO MEDICINA PREPAGADA</field>
            <field name="sequence" eval="44"/>
            <field name="amount_python_compute">if employee.income_declarant:
    if (categories.IXR + categories.ASS)*0.1 >32*parameter_obj.get_amount('UVT',payslip.date_from):
        result = 32*parameter_obj.get_amount('UVT',payslip.date_from)
    else:
        result = (categories.IXR + categories.ASS)*0.1
else:
    result = 0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_bdd_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">BDD</field>
            <field name="category_id" ref="bdd_category"/>
            <field name="name">BENEFICIO DEDUCCION DEPENDIENTES</field>
            <field name="sequence" eval="45"/>
            <field name="amount_python_compute">if employee.beneficiaries:
    if (categories.IXR + categories.ASS)*0.1 >32*parameter_obj.get_amount('UVT',payslip.date_from):
        result = 32*parameter_obj.get_amount('UVT',payslip.date_from)
    else:
        result = (categories.IXR + categories.ASS)*0.1
else:
    result = 0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_bre_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">BRE</field>
            <field name="category_id" ref="bre_category"/>
            <field name="name">BENEFICIO RENTAS EXENTAS</field>
            <field name="sequence" eval="46"/>
            <field name="amount_python_compute">if categories.RTE > (categories.IXR + categories.ASS)*0.3:
            result = (categories.IXR + categories.ASS)*0.3
else:
            result = categories.RTE</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_brl_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">BRL</field>
            <field name="category_id" ref="brl_category"/>
            <field name="name">BENEFICIO RENTAS EXENTAS LABORALES</field>
            <field name="sequence" eval="47"/>
            <field name="amount_python_compute">result = round((categories.IXR-categories.BCM-categories.BMP-categories.BDD-categories.BRE)*0.25,-3)</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_ctp_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">CTP</field>
            <field name="category_id" ref="ctp_category"/>
            <field name="name">CONTROL TOPE RENTAS Y DEDUCCIONES 40%</field>
            <field name="sequence" eval="48"/>
            <field name="amount_python_compute">if (categories.BCM + categories.BMP + categories.BDD + categories.BRE + categories.BRL) > parameter_obj.get_amount('UVT',payslip.date_from)*420:
    result = parameter_obj.get_amount('UVT',payslip.date_from)*420
elif (categories.BCM + categories.BMP + categories.BDD + categories.BRE + categories.BRL) > categories.IXR*0.4:
    result = categories.IXR*0.4
else:
    result = (categories.BCM + categories.BMP + categories.BDD + categories.BRE + categories.BRL)</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_ilmr_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">ILMR</field>
            <field name="category_id" ref="ilmr_category"/>
            <field name="name">INGRESO LABORAL MENSUAL BASE DE RETENCION</field>
            <field name="sequence" eval="49"/>
            <field name="amount_python_compute">result = categories.IXR-categories.CTP</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_ilmu_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">ILMU</field>
            <field name="category_id" ref="ilmu_category"/>
            <field name="name">INGRESO LABORAL MENSUAL EN UVT</field>
            <field name="sequence" eval="50"/>
            <field name="amount_python_compute">result = categories.ILMR/parameter_obj.get_amount('UVT',payslip.date_from)</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_reft_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">REFT</field>
            <field name="category_id" ref="reft_category"/>
            <field name="name">RETENCION EN LA FUENTE</field>
            <field name="sequence" eval="51"/>
            <field name="amount_python_compute">XIMP = 0
if categories.ILMU > 0 and categories.ILMU &lt;= 95:
    XIMP = 0
if categories.ILMU > 95 and categories.ILMU &lt;= 150:
    XIMP = ((ILMU - 95)*0.19)*parameter_obj.get_amount('UVT',payslip.date_from)
if categories.ILMU > 150 and categories.ILMU &lt;= 360:
    XIMP = ((ILMU - 150)*0.28 + 10)*parameter_obj.get_amount('UVT',payslip.date_from)
if categories.ILMU > 360 and categories.ILMU &lt;= 640:
    XIMP = ((ILMU - 360)*0.33 + 69)*parameter_obj.get_amount('UVT',payslip.date_from)
if categories.ILMU > 640 and categories.ILMU &lt;= 945:
    XIMP = ((ILMU - 640)*0.35 + 162)*parameter_obj.get_amount('UVT',payslip.date_from)
if categories.ILMU > 945 and categories.ILMU &lt;= 2300:
    XIMP = ((ILMU - 945)*0.37 + 268)*parameter_obj.get_amount('UVT',payslip.date_from)
if categories.ILMU > 2300:
    XIMP = ((ILMU - 2300)*0.39 + 770)*parameter_obj.get_amount('UVT',payslip.date_from)


if employee.withholding_procedure.name == 'PR1':
    result = round(XIMP, -3)
else:
    result = round(categories.ILMR*employee.porcent_retention_pr2/100, -3)</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>
         



         <record id="hr_salary_rule_penp_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">PENP</field>
            <field name="category_id" ref="css_category"/>
            <field name="name">PENSION</field>
            <field name="sequence" eval="52"/>
            <field name="amount_python_compute">result = PEN*3 - (contract.wage/30)*categories.AUN*0.12</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_salp_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">SALP</field>
            <field name="category_id" ref="css_category"/>
            <field name="name">SALUD</field>
            <field name="sequence" eval="53"/>
            <field name="amount_python_compute">if categories.DSS >parameter_obj.get_amount('SMMLV',payslip.date_from)*10: 
                result = SAL*2.125
else:
                result = 0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_arlp_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">ARLP</field>
            <field name="category_id" ref="css_category"/>
            <field name="name">ARL</field>
            <field name="sequence" eval="54"/>
            <field name="amount_python_compute">result = IBCA*contract.type_risk_arl_id.name</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_ccfp_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">CCFP</field>
            <field name="category_id" ref="css_category"/>
            <field name="name">CCF</field>
            <field name="sequence" eval="55"/>
            <field name="amount_python_compute">result = IBCP*0.04</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_senp_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">SENP</field>
            <field name="category_id" ref="css_category"/>
            <field name="name">SENA</field>
            <field name="sequence" eval="56"/>
            <field name="amount_python_compute">if (categories.DSS > parameter_obj.get_amount('SMMLV',payslip.date_from)*10):
            result = IBCP*0.02
else:
            result = 0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_icbp_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">ICBP</field>
            <field name="category_id" ref="css_category"/>
            <field name="name">ICBF</field>
            <field name="sequence" eval="57"/>
            <field name="amount_python_compute">if (categories.DSS > parameter_obj.get_amount('SMMLV',payslip.date_from)*10):
            result = IBCP*0.03
else:
            result = 0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_pmv_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">PMV</field>
            <field name="category_id" ref="prv_category"/>
            <field name="name">VACACIONES</field>
            <field name="sequence" eval="58"/>
            <field name="amount_python_compute">result = (categories.EXT + categories.SLI )*4.17/100</field>
            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_ing_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">ING</field>
            <field name="category_id" ref="ing_category"/>
            <field name="name">INGRESOS</field>
            <field name="sequence" eval="59"/>
            <field name="amount_python_compute">result = categories.SUE + categories.SLI + categories.AUS + categories.AUN + categories.HE + categories.RC + categories.EXT + categories.INS + categories.CSA + categories.SUB + categories.VAC</field>

            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_egr_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">EGR</field>
            <field name="category_id" ref="egr_category"/>
            <field name="name">EGRESOS</field>
            <field name="sequence" eval="60"/>
            <field name="amount_python_compute">result = categories.RTE + categories.DES + categories.ASS</field>

            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <record id="hr_salary_rule_nap_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">NAP</field>
            <field name="category_id" ref="nap_category"/>
            <field name="name">NETO A PAGAR</field>
            <field name="sequence" eval="61"/>
            <field name="amount_python_compute">result = ING-EGR</field>

            <field name="struct_id" ref="structure_s_i_co"/>
         </record>

         <!-- BASE PRIMA LEGAL  -->

         <record id="hr_salary_rule_sbsem_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">SBSEM</field>
            <field name="category_id" ref="sbsem_category"/>
            <field name="name">PROMEDIO SEMESTRAL SUELDO BASICO</field>
            <field name="sequence" eval="74"/>
            <field name="amount_python_compute">
if payslip.date_from.month in (6,12):
    result = employee.AverageWageBiannual(payslip.date_to,['SIS','IGE','IRL','LMA','LPA','LR','LT'],contract)
else:
    result= 0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
        </record>

        <record id="hr_salary_rule_extsem_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">EXTSEM</field>
            <field name="category_id" ref="extsem_category"/>
            <field name="name">PROMEDIO SEMESTRAL EXTRAS</field>
            <field name="sequence" eval="75"/>
            <field name="amount_python_compute">
if payslip.date_from.month in (6,12):
    result = employee.MethodAverageBiannual(payslip.date_to,['COM','BNS','RES'],contract,[COM,BNS,RES])
else:
    result = 0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
        </record>

        <record id="hr_salary_rule_hesem_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">HESEM</field>
            <field name="category_id" ref="hesem_category"/>
            <field name="name">PROMEDIO SEMESTRAL HE</field>
            <field name="sequence" eval="76"/>
            <field name="amount_python_compute">
if payslip.date_from.month in (6,12):
    result = employee.MethodAverageBiannual(payslip.date_to,['HED','HEN','HFD','HFN'],contract,[HED,HEN,HFD,HFN])
else:
    result= 0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
        </record>

        <record id="hr_salary_rule_rcsem_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">RCSEM</field>
            <field name="category_id" ref="rcsem_category"/>
            <field name="name">PROMEDIO SEMESTRAL RC</field>
            <field name="sequence" eval="77"/>
            <field name="amount_python_compute">
if payslip.date_from.month in (6,12):
    result = employee.MethodAverageBiannual(payslip.date_to,['RF','RN','RNF'],contract,[RF,RN,RNF])
else:
    result = 0
    </field>
            <field name="struct_id" ref="structure_s_i_co"/>
        </record>
         
        <record id="hr_salary_rule_sltsem_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">SLTSEM</field>
            <field name="category_id" ref="sltsem_category"/>
            <field name="name">PROMEDIO SEMESTRAL SUBSIDIO DE TRANSPORTE</field>
            <field name="sequence" eval="78"/>
            <field name="amount_python_compute">
if payslip.date_from.month in (6,12):
    result = employee.MethodAverageBiannual(payslip.date_to,['SLT'],contract,[SLT])
else:
    result = 0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
        </record>
        
        <record id="hr_salary_rule_bapr_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">BAPR</field>
            <field name="category_id" ref="bapr_category"/>
            <field name="name">BASE PRIMA LEGAL DE SERVICIOS SEMESTRAL</field>
            <field name="sequence" eval="79"/>
            <field name="amount_python_compute">
if payslip.date_from.month in (6,12):
    result = SBSEM + EXTSEM + HESEM + RCSEM + SLTSEM
else:
    result = 0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
        </record>
        
        <record id="hr_salary_rule_dise_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">DISE</field>
            <field name="category_id" ref="dise_category"/>
            <field name="name">DIAS SEMESTRE</field>
            <field name="sequence" eval="80"/>
            <field name="amount_python_compute">
if payslip.date_from.month in (6,12):
    result = employee.GetWorkedDays(payslip.date_to,contract)
else:
    result = 0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
        </record>

        <record id="hr_salary_rule_prim_s_i" model="hr.salary.rule">
            <field name="amount_select">code</field>
            <field name="code">PRIM</field>
            <field name="category_id" ref="prim_category"/>
            <field name="name">PRIMA LEGAL DE SERVICIOS SEMESTRAL</field>
            <field name="sequence" eval="81"/>
            <field name="amount_python_compute">
if payslip.date_from.month in (6,12):
    result = BAPR*DISE/360
else:
    result = 0</field>
            <field name="struct_id" ref="structure_s_i_co"/>
        </record>
    </data>
</odoo>